{
  "swagger": "2.0",
  "info": {
    "description": "Arquitectura de Solución para Nidoo. Está es la documentación de los servicios de Nidoo que se emplearán en la solución para minimizar el tiempo de espera de los clients al momento de buscar y autorizar una zona de parqueo.",
    "version": "1.0.0",
    "title": "Nidoo - MATI - Arquitectura de Solución Grupo 7",
    "termsOfService": "https://nidoo.com.co/#/paginasinfo/terminos",
    "contact": {
      "email": "info@nidoo.la"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "be.nidoo.co",
  "basePath": "/api",
  "tags": [
    {
      "name": "regla",
      "description": "Reglas de Nidoo para filtrar los usuarios",
      "externalDocs": {
        "description": "Más info",
        "url": "https://www.blog.nidoo.co/"
      }
    },
    {
      "name": "reserva",
      "description": "Administrar reservas",
      "externalDocs": {
        "description": "Más info",
        "url": "https://www.blog.nidoo.co"
      }
    },
    {
      "name": "notificacion",
      "description": "Notificaciones por la App a los usuarios",
      "externalDocs": {
        "description": "Más info",
        "url": "https://www.blog.nidoo.co"
      }
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/rule": {
      "put": {
        "tags": [
          "regla"
        ],
        "summary": "Crear una nueva regla",
        "description": "Agregar una regla al motor de reglas y procesarla de forma inmediata",
        "operationId": "createRule",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de regla que debe ser agregado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID Inválido"
          },
          "405": {
            "description": "Ocurrió un error en la validación"
          },
          "409": {
            "description": "Ya existe una regla con ese ID"
          }
        }
      },
      "post": {
        "tags": [
          "regla"
        ],
        "summary": "Actualizar regla",
        "description": "Actualizar una regla existente y reprocesarla",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de regla que debe ser actualizado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID Inválido"
          },
          "404": {
            "description": "Regla no encontrada con ese ID"
          },
          "405": {
            "description": "Ocurrió un error en la validación"
          }
        }
      }
    },
    "/rule/{id}": {
      "get": {
        "tags": [
          "regla"
        ],
        "summary": "Obtener una definicion de una regla",
        "description": "Obtener una regla activa y guardada en el motor de reglas",
        "operationId": "getRule",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la regla",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Regla no encontrada"
          }
        }
      }
    },
    "/rules/execute/{id}": {
      "post": {
        "tags": [
          "regla"
        ],
        "summary": "Ejecutar una regla para una reserva",
        "description": "Ejecutar las reglas asociadas a una reserva",
        "operationId": "executeRules",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la reserva",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Reserva no encontrada"
          },
          "500": {
            "description": "Ocurrió un error al momento de ejecutar la regla"
          }
        }
      }
    },
    "/reservation": {
      "put": {
        "tags": [
          "reserva"
        ],
        "summary": "Crear una nueva reserva",
        "description": "Agregar una reserva al usuario",
        "operationId": "createReservation",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de reserva que debe ser agregado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reservation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/ReservationExecutionResult"
            }
          },
          "400": {
            "description": "ID Inválido"
          },
          "405": {
            "description": "Ocurrió un error en la validación"
          },
          "409": {
            "description": "Ya existe una reserva con ese ID"
          }
        }
      },
      "post": {
        "tags": [
          "reserva"
        ],
        "summary": "Actualizar reserva",
        "description": "Actualizar una reserva existente y reprocesar las reglas",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de reserva que debe ser actualizado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reservation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/ReservationExecutionResult"
            }
          },
          "400": {
            "description": "ID Inválido"
          },
          "404": {
            "description": "Regla no encontrada con ese ID"
          },
          "405": {
            "description": "Ocurrió un error en la validación"
          }
        }
      }
    },
    "/reservation/{id}": {
      "get": {
        "tags": [
          "reserva"
        ],
        "summary": "Obtener una definicion de una reserva",
        "description": "Obtener una reserva",
        "operationId": "getReservation",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la reserva",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Reservation"
            }
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Reserva no encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "reserva"
        ],
        "summary": "Eliminar reserva",
        "description": "Eliminar una reserva existente y reprocesar las reglas",
        "operationId": "deleteReservation",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la reserva",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Reserva no encontrada"
          }
        }
      }
    },
    "/notification": {
      "put": {
        "tags": [
          "notificacion"
        ],
        "summary": "Crear una notificación",
        "description": "Enviar una notificación nueva hacia un usuario por la App",
        "operationId": "createNotification",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de notificacion que debe ser enviado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID Inválido"
          },
          "405": {
            "description": "Ocurrió un error en la validación"
          },
          "409": {
            "description": "Ya existe una notifiación con ese ID"
          }
        }
      },
      "post": {
        "tags": [
          "notificacion"
        ],
        "summary": "Actualizar notificación",
        "description": "Actualizar una notificación en la App si no ha sido enviada, si fue enviada responde como si no la encontrara",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de notificación que debe ser actualizado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID Inválido"
          },
          "404": {
            "description": "Notificación no encontrada con ese ID"
          },
          "405": {
            "description": "Ocurrió un error en la validación"
          }
        }
      }
    },
    "/notification/{id}": {
      "get": {
        "tags": [
          "notificacion"
        ],
        "summary": "Obtener una notificación",
        "description": "Obtener una notificación enviada que no haya sido entregada",
        "operationId": "getNotificacion",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la notificación",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Notificación no encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "notificacion"
        ],
        "summary": "Eliminar notificación",
        "description": "Eliminar una notificación no enviada, si ya fue enviada se responde como no existente",
        "operationId": "deleteNotificacion",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la notificación",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Notificación no encontrada"
          }
        }
      }
    }
  },
  "definitions": {
    "Rule": {
      "type": "object",
      "properties": {
        "idRegla": {
          "type": "integer",
          "format": "int64"
        },
        "timeTransaccion": {
          "type": "string",
          "format": "date-time"
        },
        "timeUltimaModificacion": {
          "type": "string",
          "format": "date-time"
        },
        "estadoRegla": {
          "type": "boolean"
        },
        "itemsEscogidos": {
          "type": "array",
          "description": "Ítems seleccionados por la regla",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "xml": {
        "name": "Rule"
      }
    },
    "Reservation": {
      "type": "object",
      "properties": {
        "idReserva": {
          "type": "integer",
          "format": "int64"
        },
        "idParqueadero": {
          "type": "integer",
          "format": "int64"
        },
        "idCliente": {
          "type": "integer",
          "format": "int64"
        },
        "timeTransaccion": {
          "type": "string",
          "format": "date-time"
        },
        "timeEntrada": {
          "type": "string",
          "format": "date-time"
        },
        "timeSalida": {
          "type": "string",
          "format": "date-time"
        },
        "formaPago": {
          "type": "string",
          "format": "string"
        },
        "idVehiculo": {
          "type": "integer",
          "format": "int64"
        },
        "precioReserva": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "Reservation"
      }
    },
    "ReservationExecutionResult": {
      "type": "object",
      "properties": {
        "idReserva": {
          "type": "string",
          "format": "int64"
        },
        "idParqueadero": {
          "type": "string",
          "format": "int64"
        },
        "resultadoEjecucion": {
          "type": "boolean"
        },
        "timeTransaccion": {
          "type": "string",
          "format": "date-time"
        },
        "idsReglasRechazadas": {
          "type": "array",
          "description": "Reglas que fueron rechazadas para la reserva",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "xml": {
        "name": "ReservationExecutionResult"
      }
    },
    "Notification": {
      "type": "object",
      "properties": {
        "idReserva": {
          "type": "string",
          "format": "int64"
        },
        "idCliente": {
          "type": "string",
          "format": "int64"
        },
        "idParqueadero": {
          "type": "string",
          "format": "int64"
        },
        "estadoReserva": {
          "type": "boolean"
        },
        "timeNotificacion": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Notification"
      }
    },
    "ReservationExecutionResultTest": {
      "type": "array",
          "description": "Reglas que fueron rechazadas para la reserva",
       "items": {
            "type": "integer",
            "format": "int64"
          },
      "xml": {
        "name": "ReservationExecutionResult"
      }
    }
  },
  "externalDocs": {
    "description": "Más info",
    "url": "https://www.blog.nidoo.co/"
  }
}
