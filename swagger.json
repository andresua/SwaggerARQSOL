{
  "swagger": "2.0",
  "info": {
    "description": "Arquitectura de Solución para Nidoo. Está es la documentación de los servicios de Nidoo que se emplearán en la solución para minimizar el tiempo de espera de los clients al momento de buscar y autorizar una zona de parqueo.",
    "version": "1.0.0",
    "title": "Nidoo - MATI - Arquitectura de Solución Grupo 7",
    "termsOfService": "https://nidoo.com.co/#/paginasinfo/terminos",
    "contact": {
      "email": "info@nidoo.la"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "be.nidoo.co",
  "basePath": "/api",
  "tags": [
    {
      "name": "regla",
      "description": "Reglas de Nidoo para filtrar los usuarios",
      "externalDocs": {
        "description": "Más info",
        "url": "https://www.blog.nidoo.co/"
      }
    },
    {
      "name": "reserva",
      "description": "Administrar reservas",
      "externalDocs": {
        "description": "Más info",
        "url": "https://www.blog.nidoo.co"
      }
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/rule": {
      "put": {
        "tags": [
          "regla"
        ],
        "summary": "Crear una nueva regla",
        "description": "Agregar una regla al motor de reglas y procesarla de forma inmediata",
        "operationId": "createRule",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de regla que debe ser agregado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID Inválido"
          },
          "405": {
            "description": "Ocurrió un error en la validación"
          },
          "409": {
            "description": "Ya existe una regla con ese ID"
          }
        }
      },
      "post": {
        "tags": [
          "regla"
        ],
        "summary": "Actualizar regla",
        "description": "Actualizar una regla existente y reprocesarla",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de regla que debe ser actualizado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID Inválido"
          },
          "404": {
            "description": "Regla no encontrada con ese ID"
          },
          "405": {
            "description": "Ocurrió un error en la validación"
          }
        }
      }
    },
    "/rule/{id}": {
      "get": {
        "tags": [
          "regla"
        ],
        "summary": "Obtener una definicion de una regla",
        "description": "Obtener una regla activa y guardada en el motor de reglas",
        "operationId": "getRule",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la regla",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Regla no encontrada"
          }
        }
      }
    },
    "/reservation": {
      "put": {
        "tags": [
          "reserva"
        ],
        "summary": "Crear una nueva reserva",
        "description": "Agregar una reserva al usuario",
        "operationId": "createReservation",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de reserva que debe ser agregado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reservation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID Inválido"
          },
          "405": {
            "description": "Ocurrió un error en la validación"
          },
          "409": {
            "description": "Ya existe una reserva con ese ID"
          }
        }
      },
      "post": {
        "tags": [
          "reserva"
        ],
        "summary": "Actualizar reserva",
        "description": "Actualizar una reserva existente y reprocesar las reglas",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de reserva que debe ser actualizado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reservation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID Inválido"
          },
          "404": {
            "description": "Regla no encontrada con ese ID"
          },
          "405": {
            "description": "Ocurrió un error en la validación"
          }
        }
      }
    },
    "/reservation/{id}": {
      "get": {
        "tags": [
          "reserva"
        ],
        "summary": "Obtener una definicion de una reserva",
        "description": "Obtener una reserva",
        "operationId": "getReservation",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la reserva",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Reservation"
            }
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Reserva no encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "reserva"
        ],
        "summary": "Eliminar reserva",
        "description": "Eliminar una reserva existente y reprocesar las reglas",
        "operationId": "deleteReservation",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la reserva",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Reserva no encontrada"
          }
        }
      }
    }
  },
  "definitions": {
    "Rule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Reservation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    }
  },
  "externalDocs": {
    "description": "Más info",
    "url": "https://www.blog.nidoo.co/"
  }
}